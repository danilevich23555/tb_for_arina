from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor


from config import TOKEN
import keyboards as kb

storage = MemoryStorage()
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=storage)

drive_dict = {'1': 1.2, '2': 1.375, '3': 1.55}
dict_procent = {'1': [15, 20],'2': [20, 25] }

class Form(StatesGroup):
    weight = State()
    tall = State()
    age = State()
    drive = State()
    level = State()


class Form_water(StatesGroup):
    weight_for_water = State()

##


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç {message['from']['first_name']} —ç—Ç–æ –±–æ—Ç –º–∞—Ä–∞—Ñ–æ–Ω–∞ PRO_—Ç–µ–ª–æ –æ—Ç ARISHA_VESNA!\n"
                        f"–° —ç—Ç–æ–≥–æ –¥–Ω—è —è –∞–∫—Ç–∏–≤–Ω–æ –±—É–¥—É —Å —Ç–æ–±–æ–π –Ω–∞ —Å–≤—è–∑–∏ ‚ù§‚ù§\n"
                        f"–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–µ—â–∏\n"
                        f"‚úî –†–∞—Å—á–µ—Ç –∫–∫–∞–ª\n"
                        f"‚úî –†–∞—Å—á–µ—Ç –Ω–æ—Ä–º—ã –≤–æ–¥—ã\n"
                        f"‚úî –§–∞–π–ª–∏–∫ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∑–∞–º–µ–Ω–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n"
                        f"‚úî –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–æ–ª–∏–∫–∏\n"
                        f"‚úî –¢—Ä–µ–∫–µ—Ä –ø–æ–ª–µ–∑–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫\n"
                        f"\n"
                        f"–í –º–µ–Ω—é –Ω–∏–∂–µ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å!", reply_markup=kb.markup3)








@dp.message_handler(content_types='text')
async def process_help_command(message: types.Message):
    count =2
    if message.text == "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ ‚öñ":
        await Form.weight.set()
        await message.reply(
            f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è —Ç–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏\n'
            f'\n'
            f'–í –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ'
            )
        await message.reply('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å.')

        @dp.message_handler(state=Form.weight)
        async def process_name(message: types.Message, state: FSMContext):
            """
            Process user name
            """
            async with state.proxy() as data:
                data['weight'] = message.text

            await Form.next()
            await message.reply("–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ä–æ—Å—Ç(–≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö)?")

        @dp.message_handler(lambda message: message.text.isdigit(), state=Form.tall)
        async def process_age(message: types.Message, state: FSMContext):
            # Update state and data
            await Form.next()
            await state.update_data(tall=int(message.text))
            await message.reply("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

        @dp.message_handler(lambda message: message.text.isdigit(), state=Form.age)
        async def process_gender(message: types.Message, state: FSMContext):
            async with state.proxy() as data:
                data['age'] = message.text

            await Form.next()
            await message.reply("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º —É—Ä–æ–≤–µ–Ω—å —Ç–≤–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.\n"
                                    "\n"
                                    "1. –°–ª–∞–±–∞—è 2-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é, –º–µ–Ω–µ–µ 5000 —à–∞–≥–æ–≤ –≤ –¥–µ–Ω—å.\n"
                                    "\n"
                                    "2. –°—Ä–µ–¥–Ω—è—è: 3-4 –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä–æ–≤–∫–∏ (–µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –º–∞—Ä–∞—Ñ–æ–Ω–µ,\n"
                                    "–≤—ã–±–∏—Ä–∞–π —ç—Ç–æ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π).\n"
                                    "\n"
                                    "3. –í—ã—Å–æ–∫–∞—è: 5-6 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é, –±–æ–ª–µ–µ 15000 —à–∞–≥–æ–≤ –≤ –¥–µ–Ω—å.\n"
                                    "\n"
                                    "–ù–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–±–µ (1 –∏–ª–∏ 2 –∏–ª–∏ 3) –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–Ω–∞–∫–æ–≤\n"
                                    "–∏ —Å–∏–º–≤–æ–ª–æ–≤.")


        @dp.message_handler( state=Form.drive)
        async def process_drive(message: types.Message, state: FSMContext):
            # Update state and data
            async with state.proxy() as data:
                data['drive'] = message.text

            await Form.next()
            norma = (((9.99*int(data['weight']))+(6.25*int(data['tall']))-(4.92*int(data['age'])))-161)*drive_dict[f'{data["drive"]}']
            await message.reply(f"{round(norma)}–ö–∫–∞–ª - —ç—Ç–æ —Ç–≤–æ–π –∫–∞–ª–æ—Ä–∞–∂ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤–µ—Å–∞\n"
                                f"\n"
                                f"‚ÄºÔ∏è–ù–ê–ü–û–ú–ò–ù–ê–Æ, –º–∞—Ä–∞—Ñ–æ–Ω –Ω–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–∞—Å—Å–æ–Ω–∞–±–æ—Ä‚ÄºÔ∏è\n"
                                f"\n"
                                f"–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ü–µ–ª—å –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω:\n"
                                f"1. –ü–æ—Ö—É–¥–µ–Ω–∏–µ –¥–æ 6 –∫–≥ –∏ —Ä–µ–ª—å–µ—Ñ\n"
                                f"2. –ü–æ—Ö—É–¥–µ–Ω–∏–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 7 –∫–≥")
            await message.reply(f'‚ùóÔ∏è–ù–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–±–µ (1 –∏–ª–∏ 2) –±–µ–∑\n'
                                f'–ª–∏—à–Ω–∏—Ö –∑–Ω–∞–∫–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤.')

        @dp.message_handler(state=Form.level)
        async def process_drive(message: types.Message, state: FSMContext):
            # Update state and data
            async with state.proxy() as data:
                data['level'] = message.text
            print(drive_dict[f'{data["drive"]}'])
            print(data["drive"])
            await Form.next()
            norma = (((9.99 * int(data['weight'])) + (6.25 * int(data['tall'])) - (4.92 * int(data['age']))) - 161)*drive_dict[f'{data["drive"]}']
            start = norma - (round(norma*dict_procent[f"{data['level']}"][0])/100)
            stop = norma - (round(norma*dict_procent[f"{data['level']}"][1])/100)
            await message.reply(f"–¢–≤–æ–π –∫–æ—Ä–∏–¥–æ—Ä –∫–∞–ª–æ—Ä–∏–π –æ—Ç {round(stop)}–ö–∫–∞–ª –¥–æ {round(start)}–ö–∫–∞–ª\n"
                                f"–ö–æ—Ä–∏–¥–æ—Ä –∫–∞–ª–æ—Ä–∏–π - —ç—Ç–æ –¥–∏–∞–ø–∞–∑–æ–Ω –∫–∞–ª–æ—Ä–∏–π,\n"
                                f"–∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –¥–ª—è —Ç–≤–æ–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞‚ú®\n"
                                f"\n")
            await message.reply(f"–ê –≤–æ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–µ–ª–∫–æ–≤/—É–≥–ª–µ–≤–æ–¥–æ–≤/–∂–∏—Ä–æ–≤ –Ω–∞ –¥–µ–Ω—å\n"
                                f"–ë–µ–ª–∫–∏: \n"
                                f"–æ—Ç {round(1.6*int(data['weight']))} –¥–æ {round(2.1*int(data['weight']))}\n"
                                f"\n"
                                f"–£–≥–ª–µ–≤–æ–¥—ã:\n"
                                f"–æ—Ç {round(2.2*int(data['weight']))} –¥–æ {round(3*int(data['weight']))}\n"
                                f"\n"
                                f"–ñ–∏—Ä—ã:\n"
                                f"–æ—Ç {round(0.8*int(data['weight']))} –¥–æ {round(1.3*int(data['weight']))}\n"
                                f"\n"
                                f"–°–æ—Ö—Ä–∞–Ω–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üëåüèΩ(—Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏ –µ–≥–æ \n"
                                f"–≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)")
            await message.reply(f'üßöüèΩ‚Äç‚ôÄÔ∏è–ú—ã —Ä–∞—Å—Å—á–∏—Ç–∞–ª–∏ –∫–∞–ª–æ—Ä–∏–∏, –∞ —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –Ω–µ–º–Ω–æ–≥–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ö–ê–ñ–î–´–ô  –¥–µ–Ω—å –∏–∑ –º–µ–Ω—é.\n'
                                f'–ò—Ç–∞–∫, –µ—Å–ª–∏ –í–∞—à –¥–µ—Ñ–∏—Ü–∏—Ç –∫–∫–∞–ª –≤—ã—à–µ–ª –≤ —Ä–∞–º–∫–∞—Ö:\n'
                                f'üëâüèª –º–µ–Ω–µ–µ 1200-1300 –∫–∫–∞–ª —É–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø–µ—Ä–µ–∫—É—Å –∏–∑ –º–µ–Ω—é\n'
                                f'______\n'
                                f'üëâüèª 1300-1400 –∫–∫–∞–ª –∫—É—à–∞–µ—Ç–µ –°–¢–†–û–ì–û –ø–æ –º–µ–Ω—é, –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∫–∞–ª –Ω–µ–ª—å–∑—è!\n'
                                f'______\n'
                                f'üëâüèª 1400-1500 –∫–∫–∞–ª –º–æ–∂–µ—Ç–µ –∫—É—à–∞—Ç—å –ø–æ –º–µ–Ω—é, –µ—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ –Ω–µ –Ω–∞–µ–¥–∞–µ—Ç–µ—Å—å,\n'
                                f' –¥–æ–±–∞–≤—å—Ç–µ –∫ –º–µ–Ω—é –≤ –ª—é–±–æ–π –ø—Ä–∏—ë–º –ø–∏—â–∏:\n'
                                f' ‚Ä¢ –∫—Ä—É–ø–∞ 30 –≥—Ä –≤ —Å—É—Ö–æ–º –≤–∏–¥–µ –∏–ª–∏ —Ö–ª–µ–±—Ü—ã 2 —à—Ç\n'
                                f'–ò–õ–ò\n'
                                f' ‚Ä¢ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, –Ω–µ–∂–∏—Ä–Ω–∞—è —Ä—ã–±–∞ –∏–ª–∏ —Ç–≤–æ—Ä–æ–≥ 2% 50 –≥\n'
                                f'______\n'
                                f'üëâüèª 1500 - 1600 –∫–∫–∞–ª\n'
                                f'–∫ –º–µ–Ω—é –≤ –ª—é–±–æ–π –ø—Ä–∏—ë–º –ø–∏—â–∏ –¥–æ–±–∞–≤–∏—Ç—å:\n'
                                f'‚Ä¢ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ 50 –≥—Ä, –≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ\n'
                                f'‚Ä¢ –º–∞—Å–ª–æ –æ–ª–∏–≤–∫–æ–≤–æ–µ 1 —á.–ª. (–º–æ–∂–Ω–æ –ø—Ä–∏–ø—Ä–∞–≤–∏—Ç—å —Å–∞–ª–∞—Ç)\n'
                                f'‚Ä¢ 20 –≥—Ä –∫—Ä—É–ø—ã –≤ —Å—É—Ö–æ–º –≤–∏–¥–µ, –≤ –ª—é–±–æ–π –ø—Ä–∏—ë–º –ø–∏—â–∏.\n'
                                f'______\n'
                                f'üëâüèª 1600-1700 –∫–∫–∞–ª –∫ –º–µ–Ω—é –≤ –ª—é–±–æ–π –ø—Ä–∏—ë–º –ø–∏—â–∏ –¥–æ–±–∞–≤–ª—è–µ–º:\n'
                                f'‚Ä¢ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ 60 –≥—Ä, –≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ\n'
                                f'‚Ä¢ –º–∞—Å–ª–æ –æ–ª–∏–≤–∫–æ–≤–æ–µ 1 —á.–ª. (–º–æ–∂–Ω–æ –ø—Ä–∏–ø—Ä–∞–≤–∏—Ç—å —Å–∞–ª–∞—Ç)\n'
                                f'‚Ä¢ –∫—Ä—É–ø–∞ 40 –≥—Ä, –≤ —Å—É—Ö–æ–º –≤–∏–¥–µ –∏–ª–∏ —Ö–ª–µ–±—Ü—ã 40 –≥—Ä.\n' 
                                f'______\n'
                                f'üëâüèª 1700-1800 –∫–∫–∞–ª –∫ –º–µ–Ω—é –≤ –ª—é–±–æ–π –ø—Ä–∏—ë–º –ø–∏—â–∏ –¥–æ–±–∞–≤–ª—è–µ–º:\n'
                                f'‚Ä¢ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ 80 –≥ (–≤ —Å—ã—Ä–æ–º –≤–∏–¥–µ)\n' 
                                f'‚Ä¢ –º–∞—Å–ª–æ –æ–ª–∏–≤–∫–æ–≤–æ–µ 1 —á.–ª.\n' 
                                f'‚Ä¢ –∫—Ä—É–ø–∞ 60 –≥—Ä, –≤ —Å—É—Ö–æ–º –≤–∏–¥–µ.')



            await state.finish()

    elif message.text == "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–æ–¥—É üí¶":
        await Form_water.weight_for_water.set()
        await message.reply(
            f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è —Ç–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏\n'
            f'\n'
            f'–í –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ'
            )
        await message.reply('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å.')

        @dp.message_handler(state=Form_water.weight_for_water)
        async def process_name(message: types.Message, state: FSMContext):
            """
            Process user name
            """
            async with state.proxy() as data:
                data['weight_for_water'] = message.text
            await message.reply(f"–¢–≤–æ—è —Å—É—Ç–æ—á–Ω–∞—è –Ω–æ—Ä–º–∞ –≤–æ–¥—ã {int(data['weight_for_water'])*0.04} –≤ –ª–∏—Ç—Ä–∞—Ö")
            await state.finish()
    elif message.text == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å üîß":
        await message.reply(f'–ï—Å–ª–∏ —Ç—ã –Ω–∞–∂–∞–ª —ç—Ç—É –∫–Ω–æ–ø–∫—É, —Ç–æ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã,\n'
                            f'–Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ —Ç–µ–ª–ª–µ–≥—Ä–∞–º–º @arishavesna, —è –æ—Ç–≤–µ—á—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–≥—É‚ù§.')


if __name__ == '__main__':
    executor.start_polling(dp)
